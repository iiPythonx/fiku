{% from "macros/top_chart.jinja2" import chart with context %}

<!doctype html>
<html lang = "en">
    <head>
        <meta charset = "utf-8">
        <link rel = "stylesheet" href = "/static/css/fiku.css" />
        <link rel = "stylesheet" href = "/static/css/fiku_new.css" />
        <title>Fiku</title>
    </head>
    <body>
        <h1><a href = "/scrobbles">Last Scrobbles</a></h1>
        <table class = "list">
            <tbody>
                {% for scrobble in db.get_recent_scrobbles() %}
                    <tr>
                        <td class = "time">{{ format_time(scrobble["listened_at"]) }}</td>
                        <td class = "icon">
                            <div class = "lazy entered loaded" style = "background-image: url('/image?artist={{ scrobble['artist_name'] }}&track={{ scrobble['track_name'] }}');"></div>
                        </td>
                        <td class = "track">
                            <span class = "artist_in_trackcolumn">
                            <a href = "/artist?artist={{ scrobble['artist_name'] }}">{{ scrobble["artist_name"] }}</a></span> &#8211; 
                            <a href = "/track?artist={{ scrobble['artist_name'] }}&track={{ scrobble['track_name'] }}">{{ scrobble["track_name"] }}</a>
                        </td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
        {{ chart("artist", "Top Artists") }}
        {{ chart("track", "Top Tracks") }}
        {{ chart("album", "Top Albums") }}

        <!-- JS -->
        <script>
            const escape = (t) => t.split("'").join("\\'").split("\"").join("\\\"");
            for (const stat of document.getElementsByClassName("stat-select")) {
                stat.addEventListener("click", async (e) => {
                    const itemType = stat.parentElement.getAttribute("data-item-type");
                    const tiles = stat.parentElement.getElementsByTagName("div")[0];
                    tiles.innerHTML = "";

                    // Make request
                    const resp = await (await fetch(`/api/top_items?item_type=${itemType}&timespan=${stat.getAttribute('data-timespan')}`)).json();
                    for (let i = 0; i < resp.data.length; i++) {
                        let query = `artist=${escape(resp.data[i].artist)}`;
                        if (itemType !== "artist") query += `&${itemType}=${escape(resp.data[i][itemType])}`;

                        // Create actual tile
                        const tile = document.createElement("div");
                        tile.classList.add("tile");
                        tile.innerHTML = `
                            <a href = "/${itemType}?${query}">
                                <div class = "lazy entered loaded" style = "background-image: url('/image?${query}');">
                                    <span class = "stats">#${i + 1}</span>
                                    <span>${resp.data[i][itemType]}</span> 
                                </div>
                            </a>
                        `;
                        tiles.appendChild(tile);
                    }
                });
            }
        </script>
    </body>
</html>
